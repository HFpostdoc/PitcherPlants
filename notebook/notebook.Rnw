%%%NOTE: for help with latex symbols look here http://mirror.unl.edu/ctan/info/symbols/comprehensive/symbols-a4.pdf.
\documentclass[12pt]{article}
\usepackage{color}
\usepackage{cite}
\usepackage{geometry}                % See geometry.pdf to learn the layout options. There are lots.
%\usepackage{pdflscape}        %single page landscape
                                %mode \begin{landscape} \end{landscape}
\geometry{letterpaper}                   % ... or a4paper or a5paper or ... 
%\usepackage[parfill]{parskip}    % Activate to begin paragraphs with an empty line rather than an indent
\usepackage{multicol} % \begin{multicols}{number of columns} \end{multicols}
% \usepackage{lineno} %add lines numbers 
\usepackage{graphicx}
\usepackage{amssymb}
\usepackage{Sweave}
\newcommand{\etal}{\textit{et al.}}
\usepackage{hyperref}  %\hyperref[label_name]{''link text''}
                       %\hyperlink{label}{anchor caption}
                       %\hypertarget{label}{link caption}
\linespread{1.5}

\title{Pitcher Networks}
\author{M.K. Lau}
%\date{}                                           % Activate to display a given date or no date

\begin{document}
\maketitle
%\linenumbers %%add line numbers

%\setcounter{tocdepth}{3}  %%activate to number sections
%\tableofcontents

%\thispagestyle{empty}
%\setcounter{page}{0}
%\setcounter{secnumdepth}{-1}  %activate to start numbering from one
%on the second page

\section{Lab Bench}

\begin{itemize}
\item generic_ews has issues fitting models to the Hawley and Molly
  datasets
\end{itemize}

\section{2 Sep 2014}
Meta-data from amanda:

\begin{verbatim}
I have moved two files to the UVM 2014 dropbox folder within the
Tipping Point MS folder.  They should be ``control_nrd_abspres.csv''
and ``control_nrd_peptide_trans.csv''.  The first file is an
absence/presence matrix with proteins present in our control
(unenriched) treatments that map to KEGG pathways.  Columns are the
pathyways and entries are 1s and 0s.  The other file is a list of all
the proteins that were present in the control treatments and the total
number of peptides that mapped to them, as well as the unique number
of peptides.  I have files like this for both our custom database
search (translated metagenomic data) and our search using a pre-set
database (has the code ``nrd'' in the file name). 
\end{verbatim}

Take a look at the "toy" example (src/KEGGgraph...).

<<>>=


@ 

\section{2 Jul 2014}

Entering the inquiline food web model from mouquet.
<<>>=
###Model and data from Mouquet et al. 2008
library(enaR)
table1 <- t(read.csv('../data/mouq_inq_values.txt'))
table1

@ 


\section{24 June 2014}

Entering the inquiline food web models.
<<>>=


@ 

Programming the O2 simulator modified by Baiser.

<<>>=
###photosynthesis
                                        #a=maximum O2 infused from plant at midday
                                        #apmin & apmax = min and max augmentation
                                        #s=steepness of mineralization augmentation
                                        #n=nutrients mineralized by decomp
                                        #Aqe=quantum yield = O2 per photon
                                        #Amax=maximum photosynthetic rate
                                        #LCP=light compensation point (x-intercept, A=0)
                                        #PAR=photosynthetically active radiation
psm <- function(t=0,a=20,f=1/1440,c=100,Aqe=0.3,Amax=4,apmax=2,apmin=0,LCP=20,s=10,n=75,d=0.5){
  PAR <- c*sin(2*pi*f*t)
  if (PAR>=20){A <- a*Amax*(1-exp(-Aqe*(PAR-LCP)))}else{A <- 0}
  return(A)
}

###Decomp
dcm <- function(t=0,a=20,w=0.075,m=1,Kw=0.1){
  O2.lost <- m + a*(w/(Kw+w))
  return(O2.lost)
}

###Nutrient diffusion model
x <- 0 #Oxygen concentration = [O_2]
t <- 0:1440 #time
a <- 20 #oxygenation augmentation
c <- 100 #constant
w <- 0.075 #prey remaining
n <- (w[1]*x[1])/c #nurient diffusion
s <- 10
d <- 0.5
apmax <- 2
apmin <- 0
a. <- 20 #
b. <- 4 #
a[2] <- a[1] * (((apmax-apmin)/(1+exp(-s*n-d)))+apmin)

for (i in 2:length(t)){
  a[i] <- a[i-1] * (((apmax-apmin)/(1+exp(-s*n[i]-d)))+apmin)
  ##
  x[i] <- psm(t=t[i],a=a[i],n=n[i]) - dcm(t=t[i],a[i],w[i-1])
  ##
  n[i] <- w[i]*x[i]
  w[i+1] <- a.*exp(-b.*w[i]*t[i])
  n[i] <- (w[1]*x[1])/c #nurient diffusion
  #psm (t=0,a=20,f=1/1440,c=100,Aqe=0.3,Amax=4,apmax=2,apmin=0,LCP=20,s=10,n=75,d=0.5){
  #dcm (t=0,a=20,a.=20,b.=4,w=0.075,m=1,Kw=0.1)
}


@ 



\section{21 May 2014}

\begin{enumerate}
\item Run simulations (Hastings, Allesina, Baiser)
\item Synthesize datasets across scales of time and space
  \begin{itemize}
  \item Pitcher inquilines
  \item Pollen records
  \item Food web reconstructions
  \end{itemize}
\end{enumerate}

Currently working on generating stats for the generic EWS.

Go to ###mark

<<>>=
rm(list=ls())
library(earlywarnings)
source('../src/loadMolly1999.R')
source('../src/loadHawley1999.R')

## "h99" = all data split by pitcher
## "h99.com" = community matrix where rows are pitchers
## "h99.date" = date as numeric vector
## "h99.env" = environmental data for each pitcher
## "h99.tpl" = community data by treatment plant leaf vector
## "h99.tpl.date" = date sampled for each leaf

###Plot over time for each pitcher for each species
##molly
i <- 9
k <- 3

for (i in 1:ncol(h99.tpl[[1]])){
  pdf(paste('../results/',paste('hawley',colnames(h99.tpl[[1]])[i],'.pdf',sep='_'),sep=''),width=20,height=10)
  par(mfrow=c(3,7))
  for (k in 1:length(h99.tpl)){
    plot(h99.tpl[[k]][,i]~h99.tpl.date[[k]],pch='',xlab='',ylab=colnames(h99.tpl[[k]])[i],main=names(h99.tpl)[k])
    lines((h99.tpl[[k]][,i]~h99.tpl.date[[k]]))
  }
  dev.off()
}


for (i in 1:ncol(m99.tpl[[1]])){
  pdf(paste('../results/',paste('molly',colnames(m99.tpl[[1]])[i],'.pdf',sep='_'),sep=''),width=20,height=10)
  par(mfrow=c(4,5))
  for (k in 1:length(m99.tpl)){
    plot(m99.tpl[[k]][,i]~m99.tpl.date[[k]],pch='',xlab='',ylab=colnames(m99.tpl[[k]])[i],main=names(m99.tpl)[k])
    lines((m99.tpl[[k]][,i]~m99.tpl.date[[k]]))
  }
  dev.off()
}


##hawley

gews <- function(x,times){
  out <- generic_ews(timeseries=data.frame(times,x))
  out <- apply(out,2,function(x,y) cor(x,y),y=out[,1])
  return(out)
}

###Hawley
out.i <- list()
out.k <- list()
for (k in 1:length(h99.tpl)){
  for (i in 1:ncol(h99.tpl[[k]])){
    out.i[[i]] <- gews(I(h99.tpl[[k]][,i] + runif(1,-0.0001,0.0001)),h99.tpl.date[[k]])
  }
  out.k[[k]] <- do.call(rbind,out.i)
  rownames(out.k[[k]]) <- paste(names(h99.tpl)[k],colnames(h99.tpl[[k]]))
}
h.out <- out.k

###Molly
out.i <- list()
out.k <- list()
for (k in 1:length(m99.tpl)){
  for (i in 1:ncol(m99.tpl[[k]])){
    out.i[[i]] <- tryCatch(gews(m99.tpl[[k]][,i],m99.tpl.date[[k]]),error=function(e){
      out <- rep(NA,9);
      names(out) <-  c('timeindex','ar1','sd','sk','kurt','cv','returnrate','densratio','acf1');
      return(out)
    })
  }
  out.k[[k]] <- do.call(rbind,out.i)
  rownames(out.k[[k]]) <- paste(names(m99.tpl)[k],colnames(m99.tpl[[k]]))
}
m.out <- out.k

###
m.out
h.out

@ 


\section{15 May 2014}

Using Early Warning Signals package for analyses. 

Moved chunk up to 21 May 2014

\section{14 May 2014}

Checked out foodweb package. Minimal utility with functions for basic
structural analyses and 3D plotting of foodwebs.

Meeting with Aaron: see Github PitcherPlant issues.

Created Milestone for Threshold indicators in inquiline food webs.


\section{13 May 2014}

Summary:
\begin{itemize}
\item Generally, there's a positive relationship between conncetance
  and ascendency
\item 
\end{itemize}


Starting the ``Lab Bench'' script file. This will serve as a free
flowing document for new code that will be transferred into permanent
script files that can be referenced via the notebook either as chunks
or inbedded figures.




\section{12 May 2014}

Looking at the Hawley 1999 dataset. 
\begin{enumerate}
\item Data management and exploration
\item Plotting dynamics of all pitchers over time
\end{enumerate}

\begin{verbatim}

Meta-data for Hawley and Molly
###Summer Time Series Data from Aaron
###NOTE! Not published data

##Hawley and Molly bogs 1999 and 2000 time series
##META
##S. purpurea inquiline community
##Two bogs, Hawley (NW MA) and Molly (NW VT)
##Sampled weekly
##Three treatments (a1=open, a2=plug 3 weeks and a3=plug 6 weeks)
##Also 20 control plants, monitored as they became available for
##colonization
##a4=control
##length(table(a4$plant)[table(a4$plant)!=0])
##Blaesoxipha = Fletcherimyia fletcheri
##Invertebrates in Freshwater Wetlands of North America: Ecology and
##Management 
##edited by Darold P. Batzer, Russell B. Rader, Scott A. Wissinger
##page 414
##Also, see
##http://www.nku.edu/~dahlem/General%20Images/DahlemNacziPPlantSarcs.pdf
##And, http://www.nku.edu/~dahlem/PPlant/ppzflies.htm

##Structure of the food webs can be found in:
##Baiser et al. 2011
##Mouquet et al. 2008 (see citations inside too)
##Gotelli and Ellison 2006

##Model from Baiser et al. 2011
\end{verbatim}

\section{06 May 2014}

Pitcher Plant temporal data:

\begin{itemize}
\item Hawley and Molly bogs 1999-2000
\item Data described in Ellison et al. 2003 Evolutionary ecology of
  carnivorous plants.

\end{itemize}


\section{05 May 2014}

Can we monitor the genetics of pitcher plant inquilines in response to
nutrient additions?

Sped read Ellison et al. 2014 Sys Bot
\begin{itemize}
\item Could building syngamen networks using hybridization and trait
  information tell us about the ecological and evolutionary responses
  of pitcher plants?
\item Genetic responses to climate change?
\item Community genetics?
\end{itemize}


\section{28 Mar 2014}

Mouquet network mutualism analysis:

<<>>=

library(enaR)
                                        #
table1 <- t(read.csv('../data/mouq_inq_values.txt'))
math.values <- data.frame(t(table1))
colnames(math.values) <- sapply(colnames(t(table1)),function(x) unlist(strsplit(x,split='_'))[1])
                                        #build model from Figure 3
inq.C <- matrix(0,nrow=10,ncol=10)
inq.N <- matrix(0,nrow=10,ncol=10)
rownames(inq.C) <- colnames(inq.C) <- c('ants','rain','detritus','bacteria','protozoa','mosquito','sediment','N','plant','atmosphere')
rownames(inq.N) <- colnames(inq.N) <- c('ants','rain','detritus','bacteria','protozoa','mosquito','sediment','N','plant','atmosphere')
                                        #build models
attach(math.values)
                                        #carbon flows
inq.C[rownames(inq.C)=='ants',colnames(inq.C)=='detritus'] <- thetaA
inq.C[rownames(inq.C)=='detritus',colnames(inq.C)=='bacteria'] <- (uB*D*B)
inq.C[rownames(inq.C)=='detritus',colnames(inq.C)=='sediment'] <- (s*D)
inq.C[rownames(inq.C)=='bacteria',colnames(inq.C)=='detritus'] <- (mB*B)
inq.C[rownames(inq.C)=='bacteria',colnames(inq.C)=='protozoa'] <- (uP*B*P)
inq.C[rownames(inq.C)=='bacteria',colnames(inq.C)=='atmosphere'] <- (rB*B)
inq.C[rownames(inq.C)=='protozoa',colnames(inq.C)=='mosquito'] <- (uM*P)
inq.C[rownames(inq.C)=='protozoa',colnames(inq.C)=='detritus'] <- (mP*P)
inq.C[rownames(inq.C)=='protozoa',colnames(inq.C)=='atmosphere'] <- (rP*P)
inq.C[rownames(inq.C)=='mosquito',colnames(inq.C)=='atmosphere'] <- (rM*uM*P)
                                        #nitrogen flows
                                        #need to get C:N ratios for nodes
                                        #inq.N[rownames(inq.N)=='',colnames(inq.N)==''] <- 
                                        #load model into enaR for ascendency
flow.nodes <- c(3,4,5,6,7)
flow <- inq.C[flow.nodes,flow.nodes]
input <- inq.C[rownames(inq.C)=='ants',flow.nodes]
export <- rep(0,nrow(flow))
respiration <- inq.C[flow.nodes,rownames(inq.C)=='atmosphere']
storage <- c(D,B,P,Mo,s)
living <- c(FALSE,TRUE,TRUE,TRUE,FALSE)
inqC.net <- pack(flow=flow,input=input,output=(export+respiration),export=export,
                 respiration=respiration,storage=storage,living=living)
                                        #ENA
plot(inqC.net,displaylabels=TRUE,vertex.cex=log(storage,2),label.pad=1,
     mode='circle',edge.lwd=log(inqC.net%n%'flow'),uselen=TRUE,edge.len=0.1)
                                        #ascendency
inqC.asc <- data.frame(enaAscendency(inqC.net))
data(troModels)
tro.rm <- unlist(lapply(troModels,function(x) any(x%v%'export'!=0)))
troModels <- troModels[is.na(tro.rm)==FALSE]
tro.asc <- do.call(rbind,lapply(troModels,enaAscendency))
tro.asc <- data.frame(tro.asc)
tot.biomass <- unlist(lapply(troModels,function(x) sum(x%v%'storage')))
                                        #plot total biomass ~ ascendency
plot((tot.biomass)~tro.asc$ASC.CAP,pch=19,xlab='Ascendency',ylab='Total System Biomass',cex=1,font.lab=2,col='grey')
#plot(log(tot.biomass)~tro.asc$ASC.CAP,pch=19,xlab='Ascendency',ylab='Total System Biomass (log scale)',cex=0.75,font.lab=2)
plot(log(tot.biomass)~log(tro.asc$ASC),pch=19,xlab='Ascendency',
     ylab='Total System Biomass',cex=1,font.lab=2,col=grey(0.3),
     xlim=c(3,17))
points(log(inqC.asc$ASC),log(sum(inqC.net%v%'storage')),pch=19,cex=2)
                                        #histogram of asc.cap
hist(c(tro.asc$ASC.CAP,inqC.asc$ASC.CAP),border='white',breaks=10,
     col=grey(0.3),xlim=c(0.2,0.9),ylim=c(0,15),main='',xlab='',ylab='')
                                        #points(inqC.asc$ASC.CAP,1,pch=19)
arrows((inqC.asc$ASC.CAP-0.0095),3,(inqC.asc$ASC.CAP-0.0095),1.5,lwd=5,col='red')
                                        #
detach(math.values)
                                        #fig 4
flow <- matrix(c(0,0,0,
                 5,0,0,
                 5,5,0),
               nrow=3)
input <- c(10,0,0)
export <- rep(0,nrow(flow))
respiration <- c(0,0,10)
storage <- c(10,10,10)
living <- c(TRUE,TRUE,TRUE)
test1 <- pack(flow=flow,
             input=input,
             output=(export+respiration),
             export=export,
             respiration=respiration,
             storage=storage,
             living=living)
flow <- matrix(c(0,0,0,
                 10,0,0,
                 0,10,0),
               nrow=3)
input <- c(10,0,0)
export <- rep(0,nrow(flow))
respiration <- c(0,0,10)
storage <- c(10,10,10)
living <- c(TRUE,TRUE,TRUE)
test2 <- pack(flow=flow,
             input=input,
             output=(export+respiration),
             export=export,
             respiration=respiration,
             storage=storage,
             living=living)
                                        #
enaAscendency(test2) - enaAscendency(test1)

@ 


%\subsection{}

%% %%Figure construction
%% <<echo=false,results=hide,label=fig1,include=false>>=
%% @ 


%% %%Figure plotting
%% \begin{figure} 
%% \begin{center} 
%% <<label=fig1,fig=TRUE,echo=false>>=
%% <<fig1>> 
%% @ 
%% \end{center} 
%% \caption{}
%% \label{fig:one}
%% \end{figure}


%% %%Activate for bibtex vibliography
%% \cite{goossens93}
%% \bibliographystyle{plain}
%% \bibliography{/Users/Aeolus/Documents/bibtex/biblib}


\end{document}  


